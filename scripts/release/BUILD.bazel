load(
    "//lib:defs.bzl",
    "PLATFORMS",
    "cmd_assets",
    "dcomment",
    "git_archive",
    "release_arg",
    "release_notes",
    "versioned_module_bazel",
)

sh_binary(
    name = "copy_assets",
    srcs = ["copy_assets.sh"],
    args = [
        "$(rlocationpaths //cmd/sha:bins)",
        "$(rlocationpaths //cmd/sha:shasums)",
        "$(rlocationpaths //cmd/templ:bins)",
        "$(rlocationpaths //cmd/templ:shasums)",
    ],
    data = [
        "//cmd/sha:bins",
        "//cmd/sha:shasums",
        "//cmd/templ:bins",
        "//cmd/templ:shasums",
    ],
    tags = ["manual"],
    deps = ["@bazel_tools//tools/bash/runfiles"],
)

release_arg(
    name = "assets_url",
    build_setting_default = "https://bzl.party",
)

[cmd_assets(
    name = "%s_assets" % cmd,
    binary = cmd,
    integrity_map = {
        "//cmd/%s:%s_%s_sha384" % (cmd, cmd, p): p
        for p in PLATFORMS.keys()
    },
    url_flag = ":assets_url",
) for cmd in [
    "sha",
    "templ",
]]

versioned_module_bazel(
    name = "versioned_module_bazel",
    out = "versioned_MODULE.bazel",
)

dcomment(
    name = "root_module_bazel",
    src = ":versioned_module_bazel",
    out = "root_MODULE.bazel",
    defines = ["_BZLPARTY_RELEASE_PUBLIC_"],
)

dcomment(
    name = "docs_build_bazel",
    src = "//docs:BUILD.bazel",
    out = "docs_BUILD.bazel",
    defines = ["_BZLPARTY_RELEASE_PUBLIC_"],
)

dcomment(
    name = "root_build_bazel",
    src = "//:BUILD.bazel",
    out = "root_BUILD.bazel",
    defines = ["_BZLPARTY_RELEASE_PUBLIC_"],
)

dcomment(
    name = "toolchains_build_bazel",
    src = "//toolchains:BUILD.bazel",
    out = "toolchains_BUILD.bazel",
    defines = ["_BZLPARTY_RELEASE_PUBLIC_"],
)

git_archive(
    name = "git_archive",
    package_name = "tools",
    virtual_files = {
        ":root_build_bazel": "BUILD.bazel",
        ":root_module_bazel": "MODULE.bazel",
        ":docs_build_bazel": "docs/BUILD.bazel",
        ":toolchains_build_bazel": "toolchains/BUILD.bazel",
        ":sha_assets": "toolchains/sha/assets.bzl",
        ":templ_assets": "toolchains/templ/assets.bzl",
    },
)

release_notes(
    name = "release_notes",
    package = "tools",
)
