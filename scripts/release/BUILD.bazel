load("//lib:defs.bzl", "PLATFORMS", "cmd_assets", "dcomment", "git_archive", "url_flag", "versioned_module_bazel")
load(":defs.bzl", "root_build_file", "toolchains_build_file")

sh_binary(
    name = "copy_assets",
    srcs = ["copy_assets.sh"],
    args = [
        "$(rlocationpaths //cmd/sha:bins)",
        "$(rlocationpaths //cmd/sha:shasums)",
        "$(rlocationpaths //cmd/templ:bins)",
        "$(rlocationpaths //cmd/templ:shasums)",
    ],
    data = [
        "//cmd/sha:bins",
        "//cmd/sha:shasums",
        "//cmd/templ:bins",
        "//cmd/templ:shasums",
    ],
    tags = ["manual"],
    deps = ["@bazel_tools//tools/bash/runfiles"],
)

url_flag(
    name = "asset_url",
    build_setting_default = "default",
)

cmd_assets(
    name = "sha_assets",
    binary = "sha",
    integrity_map = {
        "//cmd/sha:sha_%s_sha384" % p: p
        for p in PLATFORMS.keys()
    },
    url_flag = "//scripts/release:asset_url",
)

cmd_assets(
    name = "templ_assets",
    binary = "templ",
    integrity_map = {
        "//cmd/templ:templ_%s_sha384" % p: p
        for p in PLATFORMS.keys()
    },
    url_flag = "//scripts/release:asset_url",
)

versioned_module_bazel(
    name = "versioned_module_bazel",
    out = "versioned_MODULE.bazel",
    tags = ["manual"],
)

dcomment(
    name = "uncomment_module_bazel",
    src = ":versioned_module_bazel",
    out = "root_MODULE.bazel",
    defines = "_BZLPARTY_RELEASE_",
    tags = ["manual"],
)

dcomment(
    name = "docs_build_bazel",
    src = "//docs:BUILD.bazel",
    out = "docs_BUILD.bazel",
    defines = "_BZLPARTY_RELEASE_",
    tags = ["manual"],
)

root_build_file(name = "root_BUILD")

toolchains_build_file(name = "toolchains_BUILD")

git_archive(
    name = "git_archive",
    package_name = "tools",
    tags = ["manual"],
    virtual_files = {
        # these files come from `dist_files` macro
        ":root_BUILD.bazel": "BUILD.bazel",
        ":root_MODULE.bazel": "MODULE.bazel",
        ":docs_BUILD.bazel": "docs/BUILD.bazel",
        ":toolchains_BUILD.bazel": "toolchains/BUILD.bazel",
        ":sha_assets": "toolchains/sha/assets.bzl",
        ":templ_assets": "toolchains/templ/assets.bzl",
    },
)
